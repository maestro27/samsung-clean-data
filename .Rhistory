pnorm(1,mean=2,sd=3)
pnorm(0,mean=0,sd=1)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?pnorm
dnorm
?dnorm
?pnorm
?qpois
?install.packages
install.packages('rJava',repos='http://www.rforge.net/')
install.packages('rJava',repos='http://www.rforge.net/')
install.packages('rJava',repos='http://www.rforge.net/', clean=true)
install.packages('rJava',repos='http://www.rforge.net/', clean)
library(rJava)
install.packages('rJava',repos='http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
library(rJava)
library(rJava)
R.version()
version()
library(rJava)
library(rJava)
library(rJava)
setwd("C:/coursera/cleaning data/project")
d = c(1,2,3,3,3,4,5)
?as.factor()
factor(d, levels=c("A", "B", "C", "D", "E"))
d
factor(d, levels=("A", "B", "C", "D", "E"))
factor(d, levels=c("A", "B", "C", "D", "E"))
e = factor(d, levels=c("A", "B", "C", "D", "E"))
e
factor(d, labels=c("A", "B", "C", "D", "E"))
## Load the features:
features = read.table("./features.txt");
features = features[,2];
## Load test and train data:
subject_test = read.table("./test/subject_test.txt", sep=" ", header=FALSE);
x_test = read.table("./test/X_test.txt");
y_test = read.table("./test/y_test.txt");
colnames(x_test) = features;
y_test = factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
View(y_test)
y_test1 = factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING", "a"))
factor(y_test, labels=c("A", "B", "C", "D", "E", "F"))
y_test
factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING", "a"))
str(y_test)
?as.vector()
as.vector(y_test)
factor(as.vector(y_test), labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
y_test = as.vector(y_test)
factor(y_test, labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
View(y_test)
factor(as.factor(y_test), labels = c("WALKING", "WALKING_UPSTAIRS" , "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING"))
as.factor(y_test)
y_test
str(y_test)
y_test = as.vector(y_test)
str(y_test)
str(c(y_test)
)
as.factor(c(y_test))
as.numeric(y_test)
as.integer(y_test)
as.string(y_test)
as.character(y_test)
y_test = as.character(y_test)
cleanupY <- function(y_values) {
y_values = as.character(y_values);
replace(y_values, x=="\n1", "1");
replace(y_values, x=="\n2", "2");
replace(y_values, x=="\n3", "3");
replace(y_values, x=="\n4", "4");
replace(y_values, x=="\n5", "5");
replace(y_values, x=="\n6", "6");
}
features = read.table("./features.txt");
features = features[,2];
## Load test and train data:
subject_test = read.table("./test/subject_test.txt", sep=" ", header=FALSE);
x_test = read.table("./test/X_test.txt");
y_test = read.table("./test/y_test.txt");
cleanupY(y_test)
cleanupY <- function(y_values) {
y_values = as.character(y_values);
replace(y_values, y_values=="\n1", "1");
replace(y_values, y_values=="\n2", "2");
replace(y_values, y_values=="\n3", "3");
replace(y_values, y_values=="\n4", "4");
replace(y_values, y_values=="\n5", "5");
replace(y_values, y_values=="\n6", "6");
}
cleanupY(y_test)
cleanupY <- function(y_values) {
y_values = as.character(y_values);
y_values = lapply(y_values, trim);
y_values = as.character(y_values);
replace(y_values, y_values=="\n1", "1");
replace(y_values, y_values=="\n2", "2");
replace(y_values, y_values=="\n3", "3");
replace(y_values, y_values=="\n4", "4");
replace(y_values, y_values=="\n5", "5");
replace(y_values, y_values=="\n6", "6");
}
features = read.table("./features.txt");
features = features[,2];
## Load test and train data:
subject_test = read.table("./test/subject_test.txt", sep=" ", header=FALSE);
x_test = read.table("./test/X_test.txt");
y_test = read.table("./test/y_test.txt");
cleanupY(y_test)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
cleanupY(y_test)
replace(y_values, y_values=="\n1", "1");
replace(y_test, y_test=="\n1", "1");
y_test
y_test = as.character(y_test);
y_test
y_test = lapply(y_test, trim);
y_test
y_test[y_test = "\n1"]
y_test[y_test = "n1"]
y_test
cleanupY <- function(y_test) {
y_test = as.character(y_test);
y_test = lapply(y_test, trim);
y_test = as.character(y_test);
replace(y_test, y_test=="\\n1", "1");
replace(y_test, y_test=="\\n2", "2");
replace(y_test, y_test=="\\n3", "3");
replace(y_test, y_test=="\\n4", "4");
replace(y_test, y_test=="\\n5", "5");
replace(y_test, y_test=="\\n6", "6");
}
cleanupY(y_test)
y_test[y_test = "\\n1"]
y_test[y_test.length()>1]
y_test[length(y_test)>1]
a = "abcd"
a
substring(a,1,2)
substring(a,1,1)
trim <- function (x) x=substr(x,1,1)
cleanupY <- function(y_test) {
y_test = as.character(y_test);
y_test = lapply(y_test, trim);
y_test = as.character(y_test);
}
cleanupY(y_test)
y_test = cleanupY(y_test)
y_test
y_test = read.table("./test/y_test.txt");
y_test = cleanupY(y_test)
y_test
y_test = read.table("./test/y_test.txt");
y_test
y_test = as.character(y_test);
y_test
trim <- function (x) x=substr(x,1,1);
trim(a)
a = "abcd"
trim(a)
a
a = trim(a)
a
trim <- function (x) x=substr(x,2,1);
a = "abcd"
a = trim(a)
a
trim <- function (x) x=substr(x,2,2);
cleanupY(y_test)
y_test = cleanupY(y_test)
y_test
